name: Main

on:
  schedule:
    - cron:  '0 0 * * *'

  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Grab upstream/master
        run: git ls-remote https://github.com/DorianRudolph/sirula master | awk '{print $1; }' > version

      - name: Check for modified files
        id: git-check
        run: echo ::set-output name=modified::$([ -z "`git status --porcelain`" ] && echo "false" || echo "true")

      - name: Checkout upstream repo
        if: steps.git-check.outputs.modified == 'true'
        run: |
          hash=$(cat version | cut -c 1-6)
          echo "APP_VERSION=v.$hash" >> $GITHUB_ENV
          git clone https://github.com/DorianRudolph/sirula.git --branch master && \
          cd sirula && \
          git checkout $hash

      - name: Build App
        if: steps.git-check.outputs.modified == 'true'
        run: |
          cd sirula && \
          sudo apt install -y libpango1.0-dev libatk1.0-dev libgtk-3-dev libgtk-layer-shell-dev && \
          cargo build --release --verbose
      
      - name: Push upstream/master version to own repo
        if: steps.git-check.outputs.modified == 'true'
        run: |
          git config --global user.name 'Update Bot'
          git config --global user.email 'boot@example.com'
          git commit -am "New Version Detected"
          git tag $APP_VERSION --message "$APP_VERSION"
          git push --atomic origin main refs/tags/$APP_VERSION

      - name: Release
        if: steps.git-check.outputs.modified == 'true'
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: sirula/target/release/sirula
          asset_name: sirula
          tag: ${{ env.APP_VERSION }}
          overwrite: true
          body: "CI Release"
